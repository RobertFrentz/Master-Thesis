DOCKER COMMANDS

docker network create stock-network

Zookeeper:

	docker run -d --name zookeeper --network stock-network zookeeper
	
	./bin/zkCli.sh -server localhost:2181
	
	ls /brokers/ids
	
	ls /brokers/topics
	
	get /brokers/ids/1001

Kakfa:

	docker run -d --name kafka --network stock-network -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 confluentinc/cp-kafka
	
	docker exec -it kafka /bin/bash
	
	kafka-topics --create --topic my-topic-test --partitions 1 --replication-factor 1 --bootstrap-server localhost:9092
	
	kafka-topics --list --bootstrap-server localhost:9092
	
	kafka-topics --bootstrap-server localhost:9092 --topic trade-data --delete --if-exists
	kafka-topics --bootstrap-server localhost:9092 --topic trade-trade --delete --if-exists

	kafka-consumer-groups --bootstrap-server localhost:9092 --list
	
	docker run -it --rm --network stock-network confluentinc/cp-kafka /bin/kafka-console-producer --bootstrap-server kafka:9092 --topic test_topic3
	docker run -it --rm --network stock-network confluentinc/cp-kafka /bin/kafka-console-consumer --from-beginning --bootstrap-server kafka:9092 --topic trade-data --partition 0

	Custom Producer:
	
	docker cp C:\Master-Thesis\StockProducer\target\StockProducer-1.jar f7e229cf9b87:/usr/share/java/kafka/StockProducer-1.jar
	docker cp C:/Users/Robert/Desktop/debs2022-gc-trading-day-08-11-21.csv f7e229cf9b87:/usr/share/file/debs2022-gc-trading-day-08-11-21.csv
	java -jar /usr/share/java/kafka/StockProducer-1.jar
	java -cp opt/StockProducer-1.jar org.example.KafkaProducerExample


FLINK:
	
	docker run --name=jobmanager --network stock-network --publish 8081:8081 --env FLINK_PROPERTIES="jobmanager.rpc.address: jobmanager" flink:1.16.0-scala_2.12 jobmanager
	
	docker run --name=taskmanager1 --network stock-network --env FLINK_PROPERTIES="jobmanager.rpc.address: jobmanager" flink:1.16.0-scala_2.12 taskmanager
	
	./bin/flink run StockMarketApp-1.0-SNAPSHOT.jar

	docker cp C:\Master-Thesis\StockMarketApp\target\StockMarketApp-1.0-SNAPSHOT.jar b1feac9ec317:/opt/flink/StockMarketApp-1.0-SNAPSHOT.jar
	
STORM:

	docker run -d --name nimbus --publish 8080:8080 --network stock-network -e NIMBUS_SEEDS=zookeeper -e STORM_UI_PORT=8080 storm storm nimbus
	
	docker run -d --name nimbus1 --publish 8080:8080 --network stock-network -v C:/Master-Thesis/storm.yaml:/conf/storm.yaml storm storm nimbus
	
	docker run -d --name supervisor --network stock-network -e NIMBUS_SEEDS=nimbus storm storm supervisor
	
	docker run -d --name supervisor1 --network stock-network -v C:/Master-Thesis:/conf/storm.yaml storm storm supervisor
	
	docker run -d --name worker --network stock-network -e NIMBUS_SEEDS=nimbus storm storm worker

	docker cp C:\Master-Thesis\StockMartketAppStorm\target\StockMartketAppStorm-1.0-SNAPSHOT.jar nimbus:/usr/local/

	storm jar /usr/local/StockMartketAppStorm-1.0-SNAPSHOT.jar topology.KafkaTopology --workers=1 --tasks-kafka-spout=1 --tasks-window-bolt=1 --tasks-kafka-bolt=1 --executors-kafka-spout=1 --executors-window-bolt=1 --executors-kafka-bolt=1 --acks=1 --window-duration-seconds=20 --brokerUrl=kafka:9092
	
	storm ui


GRAFANA:

	docker run -d --name=grafana -p 3000:3000 --network stock-network grafana/grafana

GRAPHITE:

	docker run -d --name graphite --network stock-network -p 80:80 -p 2003-2004:2003-2004 -p 2023-2024:2023-2024 -p 8125:8125/udp -p 8126:8126 graphiteapp/graphite-statsd

2MX.FR
2ICEU.FR
555060.ETR